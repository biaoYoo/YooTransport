server:
  port: 2200

spring:
  application:
    name: provider-capacity                        # 指定发布的微服务名（以后调用时，只需该名称即可访问该服务）
  datasource:
      url: jdbc:mysql://120.76.62.168:3306/transport?characterEncoding=UTF-8&useUnicode=true&useSSL=false
      username: root
      password: yu123
      driver-class-name: com.mysql.jdbc.Driver
  rabbitmq:
       host: 120.76.62.168
       port: 5672
       username: guest
       password: guest


eureka:
  client:
    serviceUrl:
      defaultZone: http://yoo:yu123@120.76.62.168:1100/eureka/  # 指定服务注册中心的地址

mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
    # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
    # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
    #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.yoo.capacity.entity
  global-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: 3
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: 2
      #驼峰下划线转换
      db-column-underline: true
      #mp2.3+ 全局表前缀 mp_
      #table-prefix: mp_
      #刷新mapper 调试神器
      #refresh-mapper: true
      #数据库大写下划线转换
      #capital-mode: true
      # Sequence序列接口实现类配置
      key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
      #逻辑删除配置（下面3个配置）
      #logic-delete-value: 1
      #logic-not-delete-value: 0
      #sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
      #自定义填充策略接口实现
#      meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
      #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
      map-underscore-to-camel-case: true
      cache-enabled: false
      #配置JdbcTypeForNull, oracle数据库必须配置
      jdbc-type-for-null: 'null'